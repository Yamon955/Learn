global:                             # global config.
  namespace: Development            # environment type, two types: production and development.
  env_name: test                    # environment name, names of multiple environments in informal settings.

server:                                            # server configuration.
  app: test                                    # business application name.
  server: service2                                   # service process name.
  service:                                         # business service configuration，can have multiple.
    - name: trpc.test.service2.HelloWorldService              # the route name of the service.
      #ip: 0.0.0.0            #ip这行可以直接去掉，在docker容器内运行时，不能填127.0.0.1，否则不能对外访问，
      ip: 127.0.0.1
      port: 8090                                  # the service listening port, can use the placeholder ${port}.
      network: tcp                                 # the service listening network type,  tcp or udp.
      protocol: trpc                               # application layer protocol, trpc or http.

client:
  service:
    - name: trpc.test.caculator.Caculator
      network: tcp
      protocol: trpc
      target: consul://trpc.test.caculator.Caculator
      timeout: 1000


plugins:
  log:
    default:
      - writer: file #本地文件日志
        level: INFO #本地文件滚动日志的级别
        writer_config: #本地文件输出具体配置
          log_path: ./ #本地文件日志路径
          filename: trpc.log #本地文件日志文件名
          roll_type: size #文件滚动类型,size为按大小滚动
          max_age: 7 #最大日志保留天数
          max_size: 1000 #本地文件滚动日志的大小 单位 MB
          max_backups: 15 #最大日志文件数
          compress: false #日志文件是否压缩
  naming:
    consul:
      address: 127.0.0.1:8500
      services:
        - trpc.test.service2.HelloWorldService  # 一定要与 trpc service 相同
      register: #  默认注册配置，上面的 services 会使用
        interval: 1s
        timeout: 1s
        tags:
          - test
        meta:
          appid: 1
        weight: 10
        deregister_critical_service_after: 10m
      services_register: # 独立注册配置，不同服务可以有不同配置
        - service: trpc.test.service2.HelloWorldService  # 一定要与 trpc service 相同
          register: #  默认注册配置，上面的 services 会使用
            interval: 1s
            timeout: 1s
            tags:
              - test
            meta:
              appid: 1
            weight: 10
            deregister_critical_service_after: 10m
      selector:
        loadBalancer: random